// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`defaultPropsHandler ClassDeclaration with static defaultProps can resolve default props that are imported given a custom importer 1`] = `
{
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
}
`;

exports[`defaultPropsHandler ClassDeclaration with static defaultProps resolves imported spreads 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ClassDeclaration with static defaultProps resolves imported values assigned as default props 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ClassDeclaration with static defaultProps should find prop default values that are imported variables 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": true,
      "value": "ImportedComponent",
    },
  },
}
`;

exports[`defaultPropsHandler ClassDeclaration with static defaultProps should find prop default values that are literals 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ClassDeclaration with static defaultProps should find prop default values that are literals 2`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ClassDeclaration with static defaultProps should resolve local spreads 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ClassExpression with static defaultProps resolves imported values assigned as default props 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ClassExpression with static defaultProps should find prop default values that are literals 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params allows imported defaults to be aliased 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params can use imported values as default props 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params overrides with imported defaultProps 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params resolves imported spreads 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params resolves local spreads 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params should find default props that are literals 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params should find prop default values that are imported variables 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": true,
      "value": "ImportedComponent",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params should override with defaultProps if available 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params should work with aliases 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler Functional components with default params should work with no defaults 1`] = `{}`;

exports[`defaultPropsHandler ObjectExpression can resolve declared functions 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression can resolve object methods 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression handles computed properties 1`] = `
{
  "@computed#bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression handles imported values assigned to computed properties 1`] = `
{
  "@computed#bar": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression ignores complex computed properties 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression ignores imported values assigned to complex computed properties 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression resolves imported spreads 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression resolves local spreads 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression should find prop default values that are literals 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "bigint": {
    "defaultValue": {
      "computed": false,
      "value": "1n",
    },
  },
  "falseliteral": {
    "defaultValue": {
      "computed": false,
      "value": "false",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
  "nullliteral": {
    "defaultValue": {
      "computed": false,
      "value": "null",
    },
  },
  "regex": {
    "defaultValue": {
      "computed": false,
      "value": "/./",
    },
  },
  "trueliteral": {
    "defaultValue": {
      "computed": false,
      "value": "true",
    },
  },
}
`;

exports[`defaultPropsHandler ObjectExpression should find prop default values that are literals from imported functions 1`] = `
{
  "abc": {
    "defaultValue": {
      "computed": false,
      "value": "{xyz: abc.def, 123: 42}",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "baz": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": ""bar"",
    },
  },
}
`;

exports[`defaultPropsHandler can have an importer that resolves spread properties 1`] = `
{
  "123": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
  "xyz": {
    "defaultValue": {
      "computed": true,
      "value": "abc.def",
    },
  },
}
`;

exports[`defaultPropsHandler forwardRef also resolves imports when the function is not inline 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
}
`;

exports[`defaultPropsHandler forwardRef resolves default props in the parameters 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": "'bar'",
    },
  },
}
`;

exports[`defaultPropsHandler forwardRef resolves defaultProps 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": "'baz'",
    },
  },
}
`;

exports[`defaultPropsHandler forwardRef resolves imported default props in the parameters 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "["foo", "bar"]",
    },
  },
}
`;

exports[`defaultPropsHandler forwardRef resolves imported defaultProps 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": ""foo"",
    },
  },
}
`;

exports[`defaultPropsHandler forwardRef resolves when the function is not inline 1`] = `
{
  "foo": {
    "defaultValue": {
      "computed": false,
      "value": "'bar'",
    },
  },
}
`;

exports[`defaultPropsHandler should only consider Property nodes, not e.g. spread properties 1`] = `
{
  "bar": {
    "defaultValue": {
      "computed": false,
      "value": "42",
    },
  },
}
`;
