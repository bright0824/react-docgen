// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`findAllExportedComponentDefinitions CommonJS module exports React.createClass does not process X.createClass of other modules 1`] = `Array []`;

exports[`findAllExportedComponentDefinitions CommonJS module exports React.createClass finds React.createClass 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports React.createClass finds React.createClass, independent of the var name 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports React.createClass resolves an imported variable to React.createClass 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports class definitions finds class declarations 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports class definitions finds class definition, independent of the var name 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports class definitions finds class expression 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports class definitions resolves an imported variable to class declaration 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports class definitions resolves an imported variable to class expression 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports forwardRef components finds forwardRef components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 209,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports forwardRef components finds none inline forwardRef components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "name": "ColoredView",
        "type": "Identifier",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports forwardRef components resolves an imported forwardRef component 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 87,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass finds assignments to exports 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass finds exported components only once 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass finds multiple exported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass finds multiple exported components with hocs 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass finds only exported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass finds only exported components on export 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; React.createClass supports imported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; class definition finds assignments to exports 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; class definition finds exported components only once 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentA",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; class definition finds multiple exported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentA",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; class definition finds only exported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; class definition finds only exported components on export 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "R",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports module.exports = <C>; / exports.foo = <C>; class definition supports imported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports stateless components does not process X.createElement of other modules 1`] = `Array []`;

exports[`findAllExportedComponentDefinitions CommonJS module exports stateless components finds stateless component with JSX 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports stateless components finds stateless components with React.createElement, independent of the var name 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "arguments": Array [
        Node {
          "extra": Object {
            "raw": "'div'",
            "rawValue": "div",
          },
          "type": "StringLiteral",
          "value": "div",
        },
        Node {
          "properties": Array [],
          "type": "ObjectExpression",
        },
      ],
      "callee": Node {
        "computed": false,
        "object": Node {
          "name": "R",
          "type": "Identifier",
        },
        "property": Node {
          "name": "createElement",
          "type": "Identifier",
        },
        "type": "MemberExpression",
      },
      "type": "CallExpression",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports stateless components resolves an imported stateless component with JSX 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions CommonJS module exports stateless components resolves an imported stateless component with React.createElement 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "arguments": Array [
        Node {
          "extra": Object {
            "raw": "'div'",
            "rawValue": "div",
          },
          "type": "StringLiteral",
          "value": "div",
        },
        Node {
          "properties": Array [],
          "type": "ObjectExpression",
        },
      ],
      "callee": Node {
        "computed": false,
        "object": Node {
          "name": "React",
          "type": "Identifier",
        },
        "property": Node {
          "name": "createElement",
          "type": "Identifier",
        },
        "type": "MemberExpression",
      },
      "type": "CallExpression",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export <C>; class definition finds multiple components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentA",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export <C>; class definition finds named exports 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export <C>; class definition finds only exported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export <C>; function declaration finds multiple components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": Node {
      "name": "ComponentA",
      "type": "Identifier",
    },
    "params": Array [],
    "type": "FunctionDeclaration",
  },
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "params": Array [],
    "type": "FunctionDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export <C>; function declaration finds named exports 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "params": Array [],
    "type": "FunctionDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export <C>; function declaration finds only exported components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "params": Array [],
    "type": "FunctionDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds exported components only once 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds exported specifiers 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds exported specifiers 2 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds exported specifiers 3 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds multiple components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds multiple components with hocs 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass finds only exported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; React.createClass supports imported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds exported components only once 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds exported specifiers 1 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds exported specifiers 2 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds exported specifiers 3 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds multiple components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds multiple components with hocs 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentA",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition finds only exported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; class definition supports imported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; forwardRef components finds forwardRef components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 230,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; forwardRef components supports imported components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 87,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components finds exported components only once 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components finds exported specifiers 1 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "params": Array [],
    "type": "FunctionDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components finds exported specifiers 2 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components finds exported specifiers 3 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "FunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components finds multiple components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "params": Array [],
    "type": "FunctionDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components finds only exported components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export {<C>}; stateless components supports imported components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
  Node {
    "async": false,
    "body": Node {
      "arguments": Array [
        Node {
          "extra": Object {
            "raw": "'div'",
            "rawValue": "div",
          },
          "type": "StringLiteral",
          "value": "div",
        },
        Node {
          "properties": Array [],
          "type": "ObjectExpression",
        },
      ],
      "callee": Node {
        "computed": false,
        "object": Node {
          "name": "React",
          "type": "Identifier",
        },
        "property": Node {
          "name": "createElement",
          "type": "Identifier",
        },
        "type": "MemberExpression",
      },
      "type": "CallExpression",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; React.createClass finds default export 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; React.createClass finds multiple exported components with export var 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; React.createClass finds multiple exported components with named export 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; React.createClass finds only exported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; React.createClass finds reassigned default export 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; React.createClass supports imported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; class definition finds default export 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; class definition finds default export inline 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; class definition finds multiple exported components with export var 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; class definition finds multiple exported components with named export 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; class definition finds only exported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "ComponentB",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; class definition supports imported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; forwardRef components finds forwardRef components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 217,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; forwardRef components finds none inline forwardRef components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "name": "ColoredView",
        "type": "Identifier",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export default <component>; forwardRef components supports imported components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 87,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds multiple components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds multiple components with separate export statements 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds named exports 1 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds named exports 2 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds named exports 3 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds named exports 4 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass finds only exported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; React.createClass supports imported components 1`] = `
Array [
  Node {
    "properties": Array [],
    "type": "ObjectExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds multiple components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds multiple components with assigned component 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds named exports 1 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds named exports 2 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds named exports 3 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds named exports 4 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition finds only exported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": null,
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; class definition supports imported components 1`] = `
Array [
  Node {
    "body": Node {
      "body": Array [],
      "type": "ClassBody",
    },
    "id": Node {
      "name": "Component",
      "type": "Identifier",
    },
    "superClass": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "Component",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "ClassDeclaration",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; forwardRef components finds forwardRef components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 237,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; forwardRef components supports imported components 1`] = `
Array [
  Node {
    "arguments": Array [
      Node {
        "async": false,
        "body": Node {
          "children": Array [],
          "closingElement": null,
          "extra": Object {
            "parenStart": 87,
            "parenthesized": true,
          },
          "openingElement": Node {
            "attributes": Array [
              Node {
                "name": Node {
                  "name": "ref",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "name": "ref",
                    "type": "Identifier",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
              Node {
                "name": Node {
                  "name": "style",
                  "type": "JSXIdentifier",
                },
                "type": "JSXAttribute",
                "value": Node {
                  "expression": Node {
                    "properties": Array [
                      Node {
                        "computed": false,
                        "key": Node {
                          "name": "backgroundColor",
                          "type": "Identifier",
                        },
                        "method": false,
                        "shorthand": false,
                        "type": "ObjectProperty",
                        "value": Node {
                          "computed": false,
                          "object": Node {
                            "name": "props",
                            "type": "Identifier",
                          },
                          "property": Node {
                            "name": "color",
                            "type": "Identifier",
                          },
                          "type": "MemberExpression",
                        },
                      },
                    ],
                    "type": "ObjectExpression",
                  },
                  "type": "JSXExpressionContainer",
                },
              },
            ],
            "name": Node {
              "name": "div",
              "type": "JSXIdentifier",
            },
            "selfClosing": true,
            "type": "JSXOpeningElement",
          },
          "type": "JSXElement",
        },
        "generator": false,
        "id": null,
        "params": Array [
          Node {
            "name": "props",
            "type": "Identifier",
          },
          Node {
            "name": "ref",
            "type": "Identifier",
          },
        ],
        "type": "ArrowFunctionExpression",
      },
    ],
    "callee": Node {
      "computed": false,
      "object": Node {
        "name": "React",
        "type": "Identifier",
      },
      "property": Node {
        "name": "forwardRef",
        "type": "Identifier",
      },
      "type": "MemberExpression",
    },
    "type": "CallExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components finds multiple components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components finds multiple components with named export 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components finds named exports 1 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components finds only exported components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "body": Array [
        Node {
          "argument": Node {
            "children": Array [],
            "closingElement": null,
            "openingElement": Node {
              "attributes": Array [],
              "name": Node {
                "name": "div",
                "type": "JSXIdentifier",
              },
              "selfClosing": true,
              "type": "JSXOpeningElement",
            },
            "type": "JSXElement",
          },
          "type": "ReturnStatement",
        },
      ],
      "directives": Array [],
      "type": "BlockStatement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "FunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components supports imported components 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
  Node {
    "async": false,
    "body": Node {
      "arguments": Array [
        Node {
          "extra": Object {
            "raw": "'div'",
            "rawValue": "div",
          },
          "type": "StringLiteral",
          "value": "div",
        },
        Node {
          "properties": Array [],
          "type": "ObjectExpression",
        },
      ],
      "callee": Node {
        "computed": false,
        "object": Node {
          "name": "React",
          "type": "Identifier",
        },
        "property": Node {
          "name": "createElement",
          "type": "Identifier",
        },
        "type": "MemberExpression",
      },
      "type": "CallExpression",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components supports imported components 2 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components supports imported components 3 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;

exports[`findAllExportedComponentDefinitions ES6 export declarations export var foo = <C>, ...; stateless components supports imported components 4 1`] = `
Array [
  Node {
    "async": false,
    "body": Node {
      "children": Array [],
      "closingElement": null,
      "openingElement": Node {
        "attributes": Array [],
        "name": Node {
          "name": "div",
          "type": "JSXIdentifier",
        },
        "selfClosing": true,
        "type": "JSXOpeningElement",
      },
      "type": "JSXElement",
    },
    "generator": false,
    "id": null,
    "params": Array [],
    "type": "ArrowFunctionExpression",
  },
]
`;
