// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`resolveObjectValuesToArray can resolve imported objects passed to Object.values 1`] = `
[
  ""bar"",
  ""foo"",
  "0",
  "5",
  "null",
  "null",
  "7",
  ""foo"",
]
`;

exports[`resolveObjectValuesToArray can resolve spreads from imported objects 1`] = `
[
  ""foo"",
  ""baz"",
  ""bar"",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values but ignores duplicates 1`] = `
[
  "1",
  "2",
  "5",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values but ignores duplicates with getter and setter 1`] = `[]`;

exports[`resolveObjectValuesToArray resolves Object.values when using getters 1`] = `
[
  "1",
  "2",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values when using methods 1`] = `
[
  "1",
  "2",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values when using resolvable spread 1`] = `
[
  "1",
  "2",
  "4",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values when using setters 1`] = `
[
  "1",
  "2",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values with literals as computed key 1`] = `
[
  "1",
  "2",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values with numbers 1`] = `
[
  "0",
  "5",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values with strings 1`] = `
[
  ""bar"",
  ""foo"",
]
`;

exports[`resolveObjectValuesToArray resolves Object.values with undefined or null 1`] = `
[
  "null",
  "null",
]
`;
