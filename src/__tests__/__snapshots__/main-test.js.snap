exports[`main fixtures processes component "component_1.js" without errors 1`] = `
Object {
  "description": "The is a component to test the document generation",
  "displayName": "Component",
  "methods": Array [],
}
`;

exports[`main fixtures processes component "component_2.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "button",
  "methods": Array [
    Object {
      "docblock": null,
      "modifiers": Array [
        "static",
      ],
      "name": "displayName",
      "params": Array [],
      "returns": null,
    },
    Object {
      "docblock": null,
      "modifiers": Array [
        "static",
      ],
      "name": "defaultProps",
      "params": Array [],
      "returns": null,
    },
  ],
  "props": Object {
    "type": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "\"primary\"",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_3.js" without errors 1`] = `
Object {
  "description": "",
  "methods": Array [],
  "props": Object {
    "style": Object {
      "description": "",
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_4.js" without errors 1`] = `
Object {
  "description": "",
  "methods": Array [],
  "props": Object {
    "child": Object {
      "description": "",
      "required": true,
      "type": Object {
        "computed": true,
        "name": "shape",
        "value": "Child.propTypes",
      },
    },
    "extendedChild": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "shape",
        "value": Object {
          "adopted": Object {
            "name": "bool",
            "required": true,
          },
        },
      },
    },
    "something": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "string",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_5.js" without errors 1`] = `
Object {
  "description": "",
  "methods": Array [],
  "props": Object {
    "children": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "string",
      },
    },
    "onClick": Object {
      "description": "",
      "required": false,
      "type": Object {
        "name": "func",
      },
    },
    "style": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "{}",
      },
      "description": "",
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_6.js" without errors 1`] = `
Object {
  "description": "",
  "methods": Array [],
  "props": Object {
    "children": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "string",
      },
    },
    "onClick": Object {
      "description": "",
      "required": false,
      "type": Object {
        "name": "func",
      },
    },
    "style": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "{}",
      },
      "description": "",
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_7.js" without errors 1`] = `
Object {
  "description": "The is a component to test the document generation",
  "displayName": "Component",
  "methods": Array [],
}
`;

exports[`main fixtures processes component "component_8.js" without errors 1`] = `
Object {
  "description": "",
  "methods": Array [
    Object {
      "docblock": null,
      "modifiers": Array [],
      "name": "onChangeSlider",
      "params": Array [
        Object {
          "name": "[min, max]",
          "optional": undefined,
          "type": null,
        },
      ],
      "returns": null,
    },
  ],
}
`;

exports[`main fixtures processes component "component_10.js" without errors 1`] = `
Object {
  "description": "React component that display current time at current location.",
  "methods": Array [
    Object {
      "description": "Update clock state with new time",
      "docblock": "Update clock state with new time",
      "modifiers": Array [],
      "name": "updateClock",
      "params": Array [],
      "returns": null,
    },
    Object {
      "description": "Parse current Date object",
      "docblock": "Parse current Date object

@returns {Object} currentTime
   @returns {int} currentTime.hour
   @returns {int} currentTime.minutes
   @returns {string} currentTime.ampm \"am\" or \"pm\"
   @returns {string} currentTime.dayOfWeek
   @returns {string} currentTime.month
   @returns {int} currentTime.date",
      "modifiers": Array [],
      "name": "getTime",
      "params": Array [],
      "returns": Object {
        "description": "currentTime",
        "type": Object {
          "name": "Object",
        },
      },
    },
    Object {
      "description": "Update current clock for every 1 second",
      "docblock": "Update current clock for every 1 second",
      "modifiers": Array [],
      "name": "setTimer",
      "params": Array [],
      "returns": null,
    },
  ],
  "props": Object {
    "title": Object {
      "description": "A text display current\'s user identity,
 \"Nobody\" if no one is detected in the background,
 \"Hi, ..name\" if an user is detected",
      "required": false,
      "type": Object {
        "name": "string",
      },
    },
  },
}
`;
