// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`main fixtures processes component "component_1.js" without errors 1`] = `
Object {
  "description": "The is a component to test the document generation",
  "displayName": "Component",
  "methods": Array [],
}
`;

exports[`main fixtures processes component "component_2.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "button",
  "methods": Array [
    Object {
      "docblock": null,
      "modifiers": Array [
        "static",
      ],
      "name": "displayName",
      "params": Array [],
      "returns": null,
    },
    Object {
      "docblock": null,
      "modifiers": Array [
        "static",
      ],
      "name": "defaultProps",
      "params": Array [],
      "returns": null,
    },
  ],
  "props": Object {
    "type": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "\\"primary\\"",
      },
      "required": false,
    },
  },
}
`;

exports[`main fixtures processes component "component_3.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "Test",
  "methods": Array [],
  "props": Object {
    "style": Object {
      "description": "",
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_4.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "Parent",
  "methods": Array [],
  "props": Object {
    "child": Object {
      "description": "",
      "required": true,
      "type": Object {
        "computed": true,
        "name": "shape",
        "value": "Child.propTypes",
      },
    },
    "extendedChild": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "shape",
        "value": Object {
          "adopted": Object {
            "name": "bool",
            "required": true,
          },
        },
      },
    },
    "something": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "string",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_5.js" without errors 1`] = `
Object {
  "childContext": Object {
    "color": Object {
      "required": false,
      "type": Object {
        "name": "string",
      },
    },
  },
  "context": Object {
    "config": Object {
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
  "description": "",
  "displayName": "Button",
  "methods": Array [],
  "props": Object {
    "children": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "string",
      },
    },
    "onClick": Object {
      "description": "",
      "required": false,
      "type": Object {
        "name": "func",
      },
    },
    "style": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "{}",
      },
      "description": "",
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_6.js" without errors 1`] = `
Object {
  "childContext": Object {
    "color": Object {
      "required": false,
      "type": Object {
        "name": "string",
      },
    },
  },
  "context": Object {
    "config": Object {
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
  "description": "",
  "displayName": "Button",
  "methods": Array [],
  "props": Object {
    "children": Object {
      "description": "",
      "required": true,
      "type": Object {
        "name": "string",
      },
    },
    "onClick": Object {
      "description": "",
      "required": false,
      "type": Object {
        "name": "func",
      },
    },
    "style": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "{}",
      },
      "description": "",
      "required": false,
      "type": Object {
        "name": "object",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_7.js" without errors 1`] = `
Object {
  "description": "The is a component to test the document generation",
  "displayName": "Component",
  "methods": Array [],
}
`;

exports[`main fixtures processes component "component_8.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "Parent",
  "methods": Array [
    Object {
      "docblock": null,
      "modifiers": Array [],
      "name": "onChangeSlider",
      "params": Array [
        Object {
          "name": "[min, max]",
          "optional": undefined,
          "type": null,
        },
      ],
      "returns": null,
    },
  ],
}
`;

exports[`main fixtures processes component "component_9.js" without errors 1`] = `
Object {
  "description": "Should be recognized as component.",
  "displayName": "ExampleComponent",
  "methods": Array [],
}
`;

exports[`main fixtures processes component "component_10.js" without errors 1`] = `
Object {
  "description": "React component that display current time at current location.",
  "displayName": "Clock",
  "methods": Array [
    Object {
      "description": "Update clock state with new time",
      "docblock": "Update clock state with new time",
      "modifiers": Array [],
      "name": "updateClock",
      "params": Array [],
      "returns": null,
    },
    Object {
      "description": "Parse current Date object",
      "docblock": "Parse current Date object

@returns {Object} currentTime
   @returns {int} currentTime.hour
   @returns {int} currentTime.minutes
   @returns {string} currentTime.ampm \\"am\\" or \\"pm\\"
   @returns {string} currentTime.dayOfWeek
   @returns {string} currentTime.month
   @returns {int} currentTime.date",
      "modifiers": Array [],
      "name": "getTime",
      "params": Array [],
      "returns": Object {
        "description": "currentTime",
        "type": Object {
          "name": "Object",
        },
      },
    },
    Object {
      "description": "Update current clock for every 1 second",
      "docblock": "Update current clock for every 1 second",
      "modifiers": Array [],
      "name": "setTimer",
      "params": Array [],
      "returns": null,
    },
  ],
  "props": Object {
    "title": Object {
      "description": "A text display current's user identity,
 \\"Nobody\\" if no one is detected in the background,
 \\"Hi, ..name\\" if an user is detected",
      "required": false,
      "type": Object {
        "name": "string",
      },
    },
  },
}
`;

exports[`main fixtures processes component "component_11.js" without errors 1`] = `
Object {
  "composes": Array [
    "OtherProps",
  ],
  "description": "",
  "displayName": "MyComponent",
  "methods": Array [],
  "props": Object {
    "fooProp": Object {
      "description": "fooProp is spread in from a locally resolved type",
      "flowType": Object {
        "name": "string",
      },
      "required": false,
    },
    "prop1": Object {
      "description": "The first prop",
      "flowType": Object {
        "name": "string",
      },
      "required": true,
    },
    "prop2": Object {
      "description": "The second, covariant prop",
      "flowType": Object {
        "name": "number",
      },
      "required": true,
    },
  },
}
`;

exports[`main fixtures processes component "component_12.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "Foo",
  "methods": Array [],
  "props": Object {
    "prop1": Object {
      "description": "",
      "flowType": Object {
        "name": "string",
      },
      "required": true,
    },
    "prop2": Object {
      "defaultValue": Object {
        "computed": false,
        "value": "'bar'",
      },
      "description": "",
      "flowType": Object {
        "name": "string",
      },
      "required": false,
    },
  },
}
`;

exports[`main fixtures processes component "component_13.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "Foo",
  "methods": Array [],
  "props": Object {
    "RootComponent": Object {
      "description": "",
      "flowType": Object {
        "name": "ReactElementType",
        "raw": "React.ElementType",
      },
      "required": false,
    },
    "align": Object {
      "description": "",
      "flowType": Object {
        "elements": Array [
          Object {
            "name": "literal",
            "value": "\\"left\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"center\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"right\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"justify\\"",
          },
        ],
        "name": "union",
        "raw": "\\"left\\" | \\"center\\" | \\"right\\" | \\"justify\\"",
      },
      "required": false,
    },
    "capitalize": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "center": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "children": Object {
      "description": "",
      "flowType": Object {
        "name": "ReactNode",
        "raw": "React.Node",
      },
      "required": false,
    },
    "className": Object {
      "description": "",
      "flowType": Object {
        "name": "string",
      },
      "required": false,
    },
    "color": Object {
      "description": "",
      "flowType": Object {
        "name": "string",
      },
      "required": false,
    },
    "justify": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "leading": Object {
      "description": "",
      "flowType": Object {
        "elements": Array [
          Object {
            "name": "literal",
            "value": "\\"none\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"tight\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"normal\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"loose\\"",
          },
        ],
        "name": "union",
        "raw": "\\"none\\" | \\"tight\\" | \\"normal\\" | \\"loose\\"",
      },
      "required": false,
    },
    "leadingLoose": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "leadingNone": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "leadingNormal": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "leadingTight": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "left": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "lowercase": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "muted": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "right": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "size": Object {
      "description": "",
      "flowType": Object {
        "name": "string",
      },
      "required": false,
    },
    "tracking": Object {
      "description": "",
      "flowType": Object {
        "elements": Array [
          Object {
            "name": "literal",
            "value": "\\"tight\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"normal\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"wide\\"",
          },
        ],
        "name": "union",
        "raw": "\\"tight\\" | \\"normal\\" | \\"wide\\"",
      },
      "required": false,
    },
    "trackingNormal": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "trackingTight": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "trackingWide": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "transform": Object {
      "description": "",
      "flowType": Object {
        "elements": Array [
          Object {
            "name": "literal",
            "value": "\\"lowercase\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"uppercase\\"",
          },
          Object {
            "name": "literal",
            "value": "\\"capitalize\\"",
          },
        ],
        "name": "union",
        "raw": "\\"lowercase\\" | \\"uppercase\\" | \\"capitalize\\"",
      },
      "required": false,
    },
    "uppercase": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
    "wrap": Object {
      "description": "",
      "flowType": Object {
        "name": "boolean",
      },
      "required": false,
    },
  },
}
`;

exports[`main fixtures processes component "component_14.js" without errors 1`] = `
Object {
  "description": "",
  "displayName": "UncoloredView",
  "methods": Array [],
  "props": Object {
    "color": Object {
      "description": "",
      "flowType": Object {
        "name": "string",
        "nullable": true,
      },
      "required": false,
    },
  },
}
`;
